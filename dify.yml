app:
  description: ローカルの動画ファイルをアップロードし、変数を経由してGemini File APIからアップロードURLを取得します。
  icon: 📤
  icon_background: "#D6EAF8"
  mode: workflow
  name: Gemini File Upload - Step 1 with Var Check
  use_icon_as_answer_icon: false
dependencies: []
kind: app
version: 0.2.0
workflow:
  conversation_variables: []
  environment_variables:
    - description: ""
      id: bfdd1a93-ca75-48e6-8080-22dabf76b2a5
      name: GEMINI_API_KEY
      selector:
        - env
        - GEMINI_API_KEY
      value: ""
      value_type: secret
  features:
    file_upload:
      allowed_file_extensions:
        - .MP4
        - .MOV
        - .AVI
        - .WEBM
        - .MPEG
      allowed_file_types:
        - video
      allowed_file_upload_methods:
        - local_file
      enabled: true
      image:
        enabled: false
        number_limits: 3
        transfer_methods:
          - local_file
          - remote_url
      number_limits: 1
    opening_statement: Gemini File APIで処理する動画ファイルをアップロードしてください。
    retriever_resource:
      enabled: false
    sensitive_word_avoidance:
      enabled: false
    speech_to_text:
      enabled: false
    suggested_questions: []
    suggested_questions_after_answer:
      enabled: false
    text_to_speech:
      enabled: false
      language: ""
      voice: ""
  graph:
    edges:
      - data:
          isInLoop: false
          sourceType: start
          targetType: code
        id: edge_start_to_code
        source: node_start
        sourceHandle: source
        target: node_code_prepare_vars
        targetHandle: target
        type: custom
      - data:
          isInLoop: false
          sourceType: code
          targetType: http-request
        id: edge_code_to_http_start_upload
        source: node_code_prepare_vars
        sourceHandle: source
        target: node_http_start_upload
        targetHandle: target
        type: custom
      - data:
          isInLoop: false
          sourceType: http-request
          targetType: code
        id: edge_http_to_check_status
        source: node_http_start_upload
        sourceHandle: source
        target: node_check_status
        targetHandle: target
        type: custom
      - data:
          isInLoop: false
          sourceType: code
          targetType: end
        id: edge_check_status_to_end
        source: node_check_status
        sourceHandle: source
        target: node_end
        targetHandle: target
        type: custom
    nodes:
      - data:
          desc: アップロードする動画ファイルを選択します。
          selected: false
          title: 開始
          type: start
          variables:
            - allowed_file_extensions: []
              allowed_file_types:
                - video
              allowed_file_upload_methods:
                - local_file
              label: 動画ファイル
              max_length: 48
              options: []
              required: true
              type: file
              variable: uploaded_video_file
        height: 134
        id: node_start
        position:
          x: 50
          y: 200
        positionAbsolute:
          x: 50
          y: 200
        type: custom
        width: 244
      - data:
          code:
            "def main(input_mime_type: str, input_num_bytes: int, input_display_name:\
            \ str) -> dict:\n    processed_mime_type = input_mime_type\n    processed_num_bytes\
            \ = str(input_num_bytes)\n    processed_display_name = input_display_name\n\
            \    return {\n        \"MIME_TYPE_OUT\": processed_mime_type,\n       \
            \ \"NUM_BYTES_OUT\": processed_num_bytes,\n        \"DISPLAY_NAME_OUT\"\
            : processed_display_name\n    }\n"
          code_language: python3
          desc: アップロードファイル情報（MIMEタイプ, サイズ, 名前）を準備・確認します。
          outputs:
            DISPLAY_NAME_OUT:
              type: string
            MIME_TYPE_OUT:
              type: string
            NUM_BYTES_OUT:
              type: string
          selected: true
          title: "準備: ファイル情報"
          type: code
          variables:
            - value_selector:
                - node_start
                - uploaded_video_file
                - mime_type
              variable: input_mime_type
            - value_selector:
                - node_start
                - uploaded_video_file
                - size
              variable: input_num_bytes
            - value_selector:
                - node_start
                - uploaded_video_file
                - name
              variable: input_display_name
        height: 220
        id: node_code_prepare_vars
        position:
          x: 330
          y: 200
        positionAbsolute:
          x: 330
          y: 200
        selected: true
        type: custom
        width: 280
      - data:
          authorization:
            type: no-auth
          body:
            data:
              - type: text
                value:
                  '{ "file": { "displayName": "{{#node_code_prepare_vars.DISPLAY_NAME_OUT#}}"
                  } }'
            type: json
          desc: "Gemini File API: Resumable uploadセッションを開始し、アップロードURLを取得します。"
          headers: "X-Goog-Upload-Protocol:resumable

            X-Goog-Upload-Command:start

            X-Goog-Upload-Header-Content-Type:{{#node_code_prepare_vars.MIME_TYPE_OUT#}}

            X-Goog-Upload-Header-Content-Length:{{#node_code_prepare_vars.NUM_BYTES_OUT#}}

            Content-Type:application/json; charset=utf-8"
          method: post
          params: "key:{{#env.GEMINI_API_KEY#}}

            uploadType:resumable"
          retry_config:
            max_retries: "1"
            retry_enabled: false
            retry_interval: 5000
          selected: false
          ssl_verify: true
          timeout:
            connect: 10
            max_connect_timeout: 10
            max_read_timeout: 60
            max_write_timeout: 20
            read: 60
            write: 20
          title: "1. File API: Start Upload Session"
          type: http-request
          url: https://generativelanguage.googleapis.com/upload/v1beta/files
        height: 260
        id: node_http_start_upload
        position:
          x: 640
          y: 200
        positionAbsolute:
          x: 640
          y: 200
        selected: false
        type: custom
        width: 300
      - data:
          code:
            "def main(status_code: int) -> dict:\n    message = \"\"\n    if status_code\
            \ == 200:\n        message = \"正常 (アップロードURL取得成功)\"\n    else:\n       \
            \ message = f\"失敗 (ステータスコード: {status_code})\"\n    return {\"upload_status_message\"\
            : message}\n"
          code_language: python3
          desc: HTTPステータスコードをチェックし、メッセージを生成します。
          outputs:
            upload_status_message:
              type: string
          selected: false
          title: "チェック: ステータス"
          type: code
          variables:
            - value_selector:
                - node_http_start_upload
                - status_code
              variable: status_code
        height: 98
        id: node_check_status
        position:
          x: 970
          y: 200
        positionAbsolute:
          x: 970
          y: 200
        type: custom
        width: 244
      - data:
          desc: File API開始リクエストの結果とステータスメッセージを表示します。
          outputs:
            - value_selector:
                - node_http_start_upload
                - headers
              variable: response_headers
            - value_selector:
                - node_http_start_upload
                - body
              variable: response_body
            - value_selector:
                - node_http_start_upload
                - status_code
              variable: original_status_code
            - value_selector:
                - node_code_prepare_vars
                - MIME_TYPE_OUT
              variable: prepared_mime_type
            - value_selector:
                - node_code_prepare_vars
                - NUM_BYTES_OUT
              variable: prepared_num_bytes
            - value_selector:
                - node_code_prepare_vars
                - DISPLAY_NAME_OUT
              variable: prepared_display_name
            - value_selector:
                - node_check_status
                - upload_status_message
              variable: upload_status_message_result
          selected: false
          title: 終了 (結果とステータス)
          type: end
        height: 290
        id: node_end
        position:
          x: 1280
          y: 200
        positionAbsolute:
          x: 1280
          y: 200
        selected: false
        type: custom
        width: 244
    viewport:
      x: 0
      y: 0
      zoom: 1
